CC=clang
LD=wasm-ld

LIB = ../../bin/libc.a
BUILD_DIR := ../../_build/$(shell basename $(shell pwd))
OPTIMIZE ?= -O0

CFLAGS += -g -m32 -emit-llvm --target=wasm32 -c
CFLAGS += -ffreestanding -fbracket-depth=512
CFLAGS += $(OPTIMIZE) $(INCLUDES) $(WARN)

INCLUDES += -I../../lib

WARN += -Wno-parentheses-equality
WARN += -Wno-attributes
WARN += -Wno-return-type
WARN += -Wno-int-conversion
WARN += -Wno-incompatible-pointer-types
WARN += -Wno-incompatible-function-pointer-types
WARN += -Wno-pointer-sign
WARN += -Wno-bitfield-constant-conversion
WARN += -Wno-implicit-function-declaration

SOURCES := $(wildcard *.c)
OBJECTS := $(addprefix $(BUILD_DIR)/,$(SOURCES:.c=.o))

.PHONY: clean

default: all

all: $(OBJECTS:.o=.wat) $(OBJECTS:.o=.yml)

$(BUILD_DIR)/%.bc: %.c
	@mkdir -p $(dir $@)
	@echo "Building $@"
	@echo "$(CC) $(CFLAGS) -o $@ $<"; $(CC) $(CFLAGS) -o $@ $<

$(BUILD_DIR)/%.o: $(BUILD_DIR)/%.bc
	@echo "Building $@"
	@opt -O1 $< -o $<
	@llc -O1 -march=wasm32 -filetype=obj $< -o $@

$(BUILD_DIR)/%.wasm: $(BUILD_DIR)/%.o
	@echo "Building $@"
	@$(LD) --no-entry --export=__original_main $^ $(LIB) -o $@

$(BUILD_DIR)/%.wat: $(BUILD_DIR)/%.wasm
	@echo "Building $@"
	@wasm2wat $^ -o $@
	@./../../scripts/patch_wat.py $@

$(BUILD_DIR)/%.yml: %.yml
	@cp -v $< $@

clean:
	@echo "rm -rf $(BUILD_DIR)"; rm -rf $(BUILD_DIR)
